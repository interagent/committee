openapi: 3.0.0
info:
  version: 1.0.0
  title: OpenAPI3 Test
  description: A Sample file
servers:
- url: https://github.com/interagent/committee/
paths:
  /additional_properties:
    post:
      description: post additional_properties
      parameters:
        - name: first_name
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                last_name:
                  type: string
              required:
                - last_name
              additionalProperties: false
  /csv:
    get:
      description: get csv
      responses:
        '200':
          description: success
          content:
            text/csv:
              schema:
                type: string
                format: binary

  /characters:
    get:
      description: get characters
      parameters:
      - name: school_name
        in: query
        description: school name to filter by
        required: false
        style: form
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: maximum number of characters
        required: false
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  string_1:
                    type: string
                  time_string_1:
                    type: string
                    example: 2021-09-22T05:36:45Z
                  array_1:
                    type: array
                    items:
                      type: string
        '400':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  integer:
                    type: integer
    post:
      description: new characters
      responses:
        '200':
          description: correct
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_1:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                string_post_1:
                  type: string
    delete:
      description: new characters
      responses:
        '200':
          description: correct
          content:
            application/json:
              schema:
                type: object
                properties:
                  response_1:
                    type: string
      parameters:
      - name: limit
        in: query
        description: maximum number of characters
        required: false
        schema:
          type: integer
          format: int32
    head:
      description: new characters
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  integer:
                    type: integer
      parameters:
        - name: limit
          in: query
          description: maximum number of characters
          required: false
          schema:
            type: integer
            format: int32
    options:
      description: preflight request
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  integer:
                    type: integer
    trace:
      description: trace request
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  integer:
                    type: integer

  /string_params_coercer:
    get:
      description: string_params_coercer test data
      parameters:
      - name: integer_1
        in: query
        description: integer 32
        required: false
        schema:
          type: integer
          format: int32
      - name: string_1
        in: query
        description: string data
        required: false
        schema:
          type: string
      - name: boolean_1
        in: query
        description: boolean data
        required: false
        schema:
          type: boolean
      - name: number_1
        in: query
        description: number data
        required: false
        schema:
          nullable: true
          type: number
      - name: datetime_string
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: date_string
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: normal_array
        in: query
        description: number data
        required: false
        schema:
          type: array
          items:
            type: integer
      - name: nested_array
        in: query
        description: nested_array
        required: false
        schema:
          "$ref": '#/components/schemas/nested_array'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      description: string_params_coercer test data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nested_array:
                  "$ref": '#/components/schemas/nested_array'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /validate:
    get:
      description: get characters
      parameters:
      - name: query_string
        in: query
        required: true
        style: form
        schema:
          type: string
      - name: query_string
        in: path
        required: true
        schema:
          type: integer
      - name: query_integer_list
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
      - name: optional_integer
        in: query
        required: false
        schema:
          type: integer
      responses:
        '204':
          description: no content
    post:
      description: validate test data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                string:
                  type: string
                integer:
                  type: integer
                boolean:
                  type: boolean
                number:
                  type: number
                array:
                  type: array
                  items:
                    type: integer
                object_1:
                  type: object
                  properties:
                    string_1:
                      nullable: true
                      type: string
                    integer_1:
                      nullable: true
                      type: integer
                    boolean_1:
                      nullable: true
                      type: boolean
                    number_1:
                      nullable: true
                      type: number
                object_2:
                  type: object
                  required:
                  - string_2
                  - integer_2
                  - boolean_2
                  - number_2
                  properties:
                    string_2:
                      type: string
                    integer_2:
                      type: integer
                    boolean_2:
                      type: boolean
                    number_2:
                      type: number
                required_object:
                  type: object
                  required:
                  - need_object
                  properties:
                    need_object:
                      type: object
                      required:
                      - string
                      properties:
                        string:
                          type: string
                    no_need_object:
                      type: object
                      required:
                      - integer
                      properties:
                        integer:
                          type: integer
                any_of:
                  type: array
                  items:
                    anyOf:
                    - type: string
                    - type: boolean
                enum_string:
                  type: string
                  enum:
                  - a
                  - b
                enum_integer:
                  type: integer
                  enum:
                  - 1
                  - 2
                enum_number:
                  type: number
                  enum:
                  - 1.0
                  - 2.1
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                integer:
                  type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  string:
                    type: string
        '204':
          description: no content
    put:
      description: validate put method
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                string:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  string:
                    type: string
    patch:
      description: validate patch method
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integer:
                  type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  string:
                    type: string
    options:
      description: validate options method
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integer:
                  type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  string:
                    type: string

  /validate_content_types:
    post:
      description: validate request content type
      responses:
        '200':
          description: correct
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/binary:
            schema:
              type: string
              format: binary

  /validate_no_parameter:
    patch:
      description: validate no body
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  integer:
                    type: integer

  /validate_empty_optional_body:
    patch:
      description: validate empty optional body
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                integer:
                  type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  integer:
                    type: integer

  /validate_response_array:
    get:
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /path_template_test/no_template:
    get:
      responses:
        '204':
          description: no content
  /path_template_test/{template_name}:
    parameters:
    - name: template_name
      in: path
      required: true
      schema:
        type: string
    get:
      responses:
        '204':
          description: no content
  /path_template_test/{template_name}/nested:
    parameters:
    - name: template_name
      in: path
      required: true
      schema:
        type: string
    get:
      responses:
        '204':
          description: no content
  /path_template_test/{template_name}/nested/{nested_parameter}:
    parameters:
    - name: template_name
      in: path
      required: true
      schema:
        type: string
    - name: nested_parameter
      in: path
      required: true
      schema:
        type: string
    get:
      responses:
        '204':
          description: no content
  /path_template_test/{template_name}/{nested_parameter}:
    parameters:
    - name: template_name
      in: path
      required: true
      schema:
        type: string
    - name: nested_parameter
      in: path
      required: true
      schema:
        type: string
    get:
      responses:
        '204':
          description: no content
  /path_template_test/{template_name}/{nested_parameter}/finish:
    parameters:
    - name: template_name
      in: path
      required: true
      schema:
        type: string
    - name: nested_parameter
      in: path
      required: true
      schema:
        type: string
    get:
      responses:
        '204':
          description: no content
  /{ambiguous}/no_template:
    parameters:
    - name: ambiguous
      in: path
      required: true
      schema:
        type: string
    get:
      responses:
        '204':
          description: no content
  /coerce_path_params/{integer}:
    get:
      description: get characters
      parameters:
      - name: integer
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: no content
  /header:
    get:
      parameters:
        - $ref: '#/components/parameters/header_integer_required'
      responses:
        '200':
          $ref: '#/components/responses/header_integer_required'
    post:
      parameters:
        - $ref: '#/components/parameters/header_integer_required'
      responses:
        '200':
          $ref: '#/components/responses/header_integer_required'
    put:
      parameters:
        - $ref: '#/components/parameters/header_integer_required'
      responses:
        '200':
          $ref: '#/components/responses/header_integer_required'
    patch:
      parameters:
        - $ref: '#/components/parameters/header_integer_required'
      responses:
        '200':
          $ref: '#/components/responses/header_integer_required'
    delete:
      parameters:
        - $ref: '#/components/parameters/header_integer_required'
      responses:
        '200':
          $ref: '#/components/responses/header_integer_required'
    options:
      parameters:
        - $ref: '#/components/parameters/header_integer_required'
      responses:
        '200':
          $ref: '#/components/responses/header_integer_required'

  /get_endpoint_with_required_parameter:
    get:
      description: get body test
      parameters:
      - name: data
        in: query
        required: true
        schema:
          type: string
      responses:
        '204':
          description: no content

  /ref-sample:
    get:
      responses:
        '200':
          description: sample of remote schema reference
          content:
            application/json:
              schema:
                $ref: referee.yaml#/components/schemas/referred_schema

  /overwrite_same_parameter:
    post:
      description: parameter option test
      parameters:
      - name: integer
        in: query
        required: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integer:
                  type: integer
      responses:
        '204':
          description: sample of remote schema reference

  /overwrite_same_parameter/{integer}:
    post:
      description: parameter option test
      parameters:
      - name: integer
        in: path
        required: true
        schema:
          type: integer
      - name: integer
        in: query
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integer:
                  type: integer
      responses:
        '204':
          description: sample of remote schema reference

  /date_time:
    get:
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  date-time:
                    type: string
                    format: date-time
              example:
                date: 2020-05-12
                date-time: 2020-05-12T00:00:00.00Z

components:
  schemas:
    nested_array:
      type: array
      items:
        type: object
        properties:
          update_time:
            type: string
            format: date-time
          per_page:
            type: integer
          threshold:
            type: number
          nested_coercer_object:
            type: object
            properties:
              update_time:
                type: string
                format: date-time
              threshold:
                type: number
          nested_no_coercer_object:
            type: object
          nested_coercer_array:
            type: array
            items:
              type: object
              properties:
                update_time:
                  type: string
                  format: date-time
                threshold:
                  type: number
          nested_no_coercer_array:
            type: array
            items:
              type: object
          datetime_array:
            type: array
            items:
              type: string
              format: date-time

  parameters:
    header_integer_required:
      name: integer
      in: header
      required: true
      schema:
        type: integer

  responses:
    header_integer_required:
      headers:
        integer:
          schema:
            required: true
            type: integer
